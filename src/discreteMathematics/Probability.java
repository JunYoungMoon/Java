package discreteMathematics;

public class Probability {
    public static void main(String[] args) {
        /**
         * 확률
         * 설명 : 어떤 사건이 일어날 가능성을 수치화한 것
         *       표본공간(Sample space) 실험의 결과가 될수 있는 모든 경우의 집합
         *       실험(Experiment) 모든 경우의 수에서 하나를 뽑는 절차
         *       p(E) = 사건 E가 일어나는 경우의 수 (E) / 모든 경우의 수 (S)
         */

        int n = 52;
        int r = 5;
        long s = 1;
        //포커에서 포카드 받기
        //카드는 총52장 중에서 5장을 받을수 있다.
        //같은 숫자의 카드는 총 4개씩 13그룹으로 나눌수 있는데, 같은 그림의 카드 4장을 받게되면 포카드라고한다.
        //1. 표본공간을 구한다.
        //2. 포카드를 받을 경우의수를 구한다.
        //3. 나머지 한개의 카드의 경우의수를 구해서 모든 경우를 곱한다.

        //1. 표본공간을 구한다.
        for (int i = n; i > n - r; i--) {
            s = s * i;
        }

        //2. 포카드를 받을 경우의수
        //같은 숫자의 4장의 카드를 그룹화 하면 총 13개의 그룹이 나온다. 그중 하나를 뽑는 경우의수 13C1
        float fourCardCase = 13;

        //3. 나머지 한개의 카드의 경우의수를 구해서 모든 경우를 구한다.
        //포카드 4개를 제외한 것중에 하나를 뽑는 경우의수 48C1
        float lastOneCard = 48;

        // p(E) = (E) / (S)
        float result = fourCardCase * lastOneCard / s;

        System.out.println("포커에서 포카드 받을 확률 : " + String.format("%.9f", result));

        /**
         * 여사건
         * 설명 : 어떤 사건이 일어날 확률을 알면 그사건이 일어나지 않을 확률도 앎
         *       여사건 p(E ̅) = 1 - p(E)
         */

        //8비트수에서 값이 1인 비트가 최소 하나는 있을 확률
        //1. 1인 비트가 최소 하나가 있다의 반대는 값이 1인 비트가 없다 즉 모두 값이 0이다.
        double a = (double) 1 / 256;

        System.out.println("8비트중 값이 1인 비트가 하나 이상 있을 확률 : " + String.format("%.09f", 1 - a));


        /**
         * 조건부 확률
         * 설명 : 어떤 사건 F가 발생했을 때, 그런 상황 하에서 사건 E가 일어날 확률
         *       p(E|F)
         */

        //동전 연속으로 던지기
        //동전을 3번 던지려고 한다. 처음에는 앞면이 나왔고 이제 2번더 던지면 앞면이 나온 총 횟수가 홀수번인 확률
        //F : 첫번째 면이 앞면인 경우
        //E : 앞면이 홀수번 나오는 경우

        //1.먼저 트리로 F와 E를 모두 만족할때의 확률을 찾는다.
        //|E ∩ F| = 2 (앞뒤뒤, 앞앞앞)
        //2.표본공간 구하기
        //|S| = 2^3 = 8
        //p(E ∩ F) = 2/8 = 1/4
        //3.첫번째 동전이 앞면일때 표본 공간에서 확률 구하기 (1/4는 첫번째 동전이 앞,뒤 모두의 표본 공간)
        //앞면이 표본공간의 절반을 차지 즉 p(E) = 1/2 위에서 구한 표본공간 4에서 1/2를 한다.

        //p(E|F) = |E ∩ F| / |S| * p(F) = p(E ∩ F) / p(F)
    }
}
